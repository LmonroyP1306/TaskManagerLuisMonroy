@model IEnumerable<TaskManager.Models.Tarea>

@{
    ViewBag.Title = "Tablero de Tareas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
<link rel="stylesheet" href="~/Content/Task/css/Task.css" />

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Tablero de Tareas</h2>
    <button type="button" class="btn btn-success" id="btnNuevaTarea">
        <i class="bi bi-plus-circle"></i> Crear Tarea
    </button>
</div>

<form method="get" class="row mb-4">
    <div class="col-md-4">
        <label for="fechaFiltro" class="form-label">Filtrar por Fecha de Vencimiento</label>
        <input type="date" id="fechaFiltro" name="fechaFiltro" value="@Request.QueryString["fechaFiltro"]" class="form-control" />
    </div>
    <div class="col-md-4">
        <label for="orden" class="form-label">Ordenar por Fecha</label>
        <select id="orden" name="orden" class="form-select">
            <option value="asc" @(Request.QueryString["orden"] == "asc" ? "selected" : "")>Ascendente</option>
            <option value="desc" @(Request.QueryString["orden"] == "desc" ? "selected" : "")>Descendente</option>
        </select>
    </div>
    <div class="col-md-4 d-flex align-items-end">
        <button type="submit" class="btn btn-primary me-2">Aplicar</button>
        <a href="@Url.Action("Index", "Tareas")" class="btn btn-secondary">Limpiar</a>
    </div>
</form>

<div class="kanban-board">
    <div class="row">
        <!-- Columna Pendiente -->
        <div class="col-md-4">
            <div class="kanban-column bg-light p-3 rounded-3">
                <h5 class="column-header bg-warning text-dark p-2 rounded-2">
                    <i class="bi bi-hourglass"></i> Pendiente
                    <span class="badge bg-white text-dark ms-2">@Model.Count(t => t.Estado == "Pendiente")</span>
                </h5>
                <div class="tasks-list" id="Pendiente-column">
                    @foreach (var tarea in Model.Where(t => t.Estado == "Pendiente"))
                    {
                        @Html.Partial("_TaskCard", tarea)
                    }
                </div>
            </div>
        </div>

        <!-- Columna En Progreso -->
        <div class="col-md-4">
            <div class="kanban-column bg-light p-3 rounded-3">
                <h5 class="column-header bg-info text-white p-2 rounded-2">
                    <i class="bi bi-arrow-repeat"></i> En Progreso
                    <span class="badge bg-white text-dark ms-2">@Model.Count(t => t.Estado == "EnProgreso")</span>
                </h5>
                <div class="tasks-list" id="EnProgreso-column">
                    @foreach (var tarea in Model.Where(t => t.Estado == "EnProgreso"))
                    {
                        @Html.Partial("_TaskCard", tarea)
                    }
                </div>
            </div>
        </div>

        <!-- Columna Completa -->
        <div class="col-md-4">
            <div class="kanban-column bg-light p-3 rounded-3">
                <h5 class="column-header bg-success text-white p-2 rounded-2">
                    <i class="bi bi-check-circle"></i> Completa
                    <span class="badge bg-white text-dark ms-2">@Model.Count(t => t.Estado == "Completa")</span>
                </h5>
                <div class="tasks-list" id="Completa-column">
                    @foreach (var tarea in Model.Where(t => t.Estado == "Completa"))
                    {
                        @Html.Partial("_TaskCard", tarea)
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="createModal" tabindex="-1" aria-labelledby="createModalLabel">
    <div class="modal-dialog">
        <div class="modal-content"></div>
    </div>
</div>

<div class="modal" id="editModal" tabindex="-1" aria-labelledby="editModalLabel">
    <div class="modal-dialog">
        <div class="modal-content"></div>
    </div>
</div>

<div class="modal" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel">
    <div class="modal-dialog">
        <div class="modal-content"></div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
    <script>
        $(document).ready(function() {
            // Configuración de modales mejorada
            function setupModal(modalId, loadUrl) {
                const modalElement = document.getElementById(modalId);
                const modal = new bootstrap.Modal(modalElement, {
                    focus: true,
                    backdrop: 'static'
                });

                // Limpiar modal al ocultar
                modalElement.addEventListener('hidden.bs.modal', function() {
                    $(this).find('.modal-content').empty();
                });

                return {
                    show: function() {
                        return new Promise((resolve) => {
                            $(modalElement).find('.modal-content').load(loadUrl, function () {
                                modal.show();
                                $(this).find('input:first').trigger('focus');
                                resolve();
                            });
                        });
                    },
                    showWithId: function(id) {
                        const url = loadUrl + '/' + id;
                        return new Promise((resolve) => {
                            $(modalElement).find('.modal-content').load(url, function () {
                                modal.show();
                                $(this).find('input:first').trigger('focus');
                                resolve();
                            });
                        });
                    },
                    hide: function () {
                        modal.hide();
                    }
                };
            }

            // Inicializar modales
            const createModal = setupModal('createModal', '@Url.Action("Create", "Tareas")');
            const editModal = setupModal('editModal', '@Url.Action("Edit", "Tareas")');
            const deleteModal = setupModal('deleteModal', '@Url.Action("Delete", "Tareas")');

            // Eventos
            $('#btnNuevaTarea').click(function() {
                createModal.show();
            });

            $(document).on('click', '.edit-btn', function() {
                editModal.showWithId($(this).data('id'));
            });

            $(document).on('click', '.delete-btn', function() {
                deleteModal.showWithId($(this).data('id'));
            });

            // SortableJS
            ['Pendiente', 'EnProgreso', 'Completa'].forEach(col => {
                new Sortable(document.getElementById(`${col}-column`), {
                    group: 'tasks',
                    animation: 150,
                    onEnd: updateTaskStatus
                });
            });

            function updateTaskStatus(evt) {
                const taskId = evt.item.dataset.taskId;
                const newStatus = evt.to.id.replace('-column', '');

                $.ajax({
                    url: '@Url.Action("UpdateStatus", "Tareas")',
                    type: 'POST',
                    data: { id: taskId, newStatus: newStatus },
                    success: response => !response.success && evt.from.appendChild(evt.item)
                });
            }

            // Tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();

            // Manejo de formularios modales
            $(document).on('submit', '.modal-content form', function(e) {
                e.preventDefault();
                const form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: form.serialize(),
                    success: response => {
                        if (response.success) {
                            window.location.reload();
                        } else {
                            form.closest('.modal-content').html(response);
                        }
                    }
                });
            });
        });
    </script>
}